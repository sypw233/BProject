name: Quick Build & Test

# 快速构建和测试工作流，用于开发阶段的快速验证
on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # 快速构建测试（仅Windows）
  quick-build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
      
    # 运行测试
    - name: Run Tests
      run: ./gradlew :composeApp:testDebugUnitTest
      shell: bash
      continue-on-error: true
      
    # 编译检查
    - name: Compile Check
      run: ./gradlew :composeApp:compileKotlinDesktop
      shell: bash
      
    # 快速构建可执行文件（不打包）
    - name: Quick Build Executable
      run: ./gradlew :composeApp:createDistributable
      shell: bash
      
    # 验证构建结果
    - name: Verify Build
      run: |
        echo "检查构建产物..."
        if [ -d "composeApp/build/compose/binaries/main/app" ]; then
          echo "✅ 构建成功！"
          ls -la composeApp/build/compose/binaries/main/app/
        else
          echo "❌ 构建失败！"
          exit 1
        fi
      shell: bash
      
    # 上传构建产物（仅保留7天）
    - name: Upload Quick Build
      uses: actions/upload-artifact@v4
      with:
        name: quick-build-${{ github.sha }}
        path: composeApp/build/compose/binaries/main/app/
        retention-days: 7
        
    # 构建摘要
    - name: Build Summary
      run: |
        echo "## 🚀 快速构建完成" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 构建信息" >> $GITHUB_STEP_SUMMARY
        echo "- **提交**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **分支**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **构建时间**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 下一步" >> $GITHUB_STEP_SUMMARY
        echo "- 下载构建产物进行本地测试" >> $GITHUB_STEP_SUMMARY
        echo "- 如需正式发布，请合并到main分支" >> $GITHUB_STEP_SUMMARY
      shell: bash