name: Build Multi-Platform Apps

# 触发条件：推送到main分支或创建tag时
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发

jobs:
  # Windows构建任务（仅可执行文件）
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash
      
      # 构建Windows可执行文件（不包含MSI）
      - name: Build Windows Executable
        run: ./gradlew :composeApp:createDistributable
        shell: bash

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-desktop-app
          path: composeApp/build/compose/binaries/main/app/
          retention-days: 30
  # macOS构建任务
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      # 构建macOS DMG安装包
      - name: Build macOS DMG
        run: ./gradlew :composeApp:packageDmg

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-desktop-app
          path: |
            composeApp/build/compose/binaries/main/dmg/*.dmg
            composeApp/build/compose/binaries/main/app/
          retention-days: 30

  # Linux构建任务
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      # 构建Linux DEB安装包
      - name: Build Linux DEB
        run: ./gradlew :composeApp:packageDeb

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-desktop-app
          path: |
            composeApp/build/compose/binaries/main/deb/*.deb
            composeApp/build/compose/binaries/main/app/
          retention-days: 30

  create-release:
    needs: [ build-windows, build-macos, build-linux ]
    runs-on: ubuntu-latest

    steps:
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-desktop-app
          path: ./artifacts/windows/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-desktop-app
          path: ./artifacts/macos/

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-desktop-app
          path: ./artifacts/linux/

      - name: Package Windows App
        run: |
          cd ./artifacts/windows/
          zip -r ../../windows-app.zip .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows-app.zip
            ./artifacts/macos/**/*.dmg
            ./artifacts/linux/**/*.deb
          draft: false
          prerelease: false
          tag_name: Commit-${{ env.SHORT_SHA }}
          name: Commit ${{ env.SHORT_SHA }}
          body: |
            哪有这么多有的没的
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
