name: Build Mobile Apps (Android & iOS)

# 触发条件：仅在创建tag时自动编译
on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch: # 允许手动触发

jobs:
  # Android构建任务
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # 设置Android签名密钥（如果有的话）
    - name: Setup Android Keystore
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android-keystore.jks
      
    # 构建Android APK（Debug版本，如果没有签名密钥）
    - name: Build Android APK (Debug)
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' }}
      run: ./gradlew :composeApp:assembleDebug
      
    # 构建Android APK（Release版本，如果有签名密钥）
    - name: Build Android APK (Release)
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
      run: ./gradlew :composeApp:assembleRelease
      env:
        ANDROID_KEYSTORE_FILE: android-keystore.jks
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        
    - name: Upload Android Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-app
        path: composeApp/build/outputs/apk/**/*.apk
        retention-days: 30
        
  # 创建移动端Release
  create-mobile-release:
    needs: [build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Android Artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-app
        path: ./artifacts/android/

        
    # 重命名移动端文件为规范格式
    - name: Rename Mobile Release Files
      run: |
        # 获取tag名称
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # 重命名Android文件
        cd ./artifacts/android/
        
        # 查找APK文件并重命名
        find . -name "*.apk" -type f | while read apk_file; do
          if [[ "$apk_file" == *"debug"* ]]; then
            mv "$apk_file" "bProject_${TAG_NAME}_android_debug.apk"
          elif [[ "$apk_file" == *"release"* ]]; then
            mv "$apk_file" "bProject_${TAG_NAME}_android.apk"
          else
            mv "$apk_file" "bProject_${TAG_NAME}_android.apk"
          fi
        done
        
    - name: Create Mobile Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/android/bProject_${{ github.ref_name }}_android.apk
          ./artifacts/android/bProject_${{ github.ref_name }}_android_debug.apk
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name }}
        name: bProject Mobile ${{ github.ref_name }}
        body: |
          ### 移动端安装说明
          1. **Android**: 
             - 正式版：下载 `bProject_${{ github.ref_name }}_android.apk` 文件并安装
             - 调试版：下载 `bProject_${{ github.ref_name }}_android_debug.apk` 文件并安装
          
          ### 更新内容
          - 最新的功能更新和bug修复
          - 性能优化和稳定性提升
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}